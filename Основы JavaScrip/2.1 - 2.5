2.1 Привет мир! 

 <script>
    alert( 'Привет, мир!' );
  </script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/3.2.0/lodash.js"></script>


Если атрибут src установлен, содержимое тега script будет игнорироваться.
В одном теге <script> нельзя использовать одновременно атрибут src и код внутри.

Нижеприведённый пример не работает:

<script src="file.js">
  alert(1); // содержимое игнорируется, так как есть атрибут src
</script>
Нужно выбрать: либо внешний скрипт <script src="…">, либо обычный код внутри тега <script>.

2.2

// - строчный комментарий 
/* */ - многострочный комментарий 

2.3 Строгий режим — "use strict"

Директива выглядит как строка: "use strict" или 'use strict'. Когда она находится в начале скрипта, весь сценарий работает в «современном» режиме.

Например:

"use strict";

// этот код работает в современном режиме
...

Внутри функции : 
 
(function() {
  'use strict';

  // ...ваш код...
})()


2.4 Переменные
let name = 'john' - блочная область видимости (доступна только внутри объявленного блока {}, может быть переназначенна, не всплывает ReferenceError)
const name = 'john' - блочная область видимости  (доступна только внутри объявленного блока {}, не может быть переназначенна, не всплывает ReferenceError)
var name = 'john' - функциональная область видимости (доступна везде внутри функции,может быть переназначенна, есть всплытие, обращение к переменной до ее объявления выведет undefined)

let admin, name; 
name = "Джон"
admin = name
alert( admin )

2.5 Типы данных 

number
BigInt
string
boolean
null
undefined
object
symbol
